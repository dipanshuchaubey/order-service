// Code generated by mockery v2.46.0. DO NOT EDIT.

package mocks

import (
	context "context"
	handler "order-service/consumer/handler"

	mock "github.com/stretchr/testify/mock"
)

// SyncOrderInterface is an autogenerated mock type for the SyncOrderInterface type
type SyncOrderInterface struct {
	mock.Mock
}

// Handler provides a mock function with given fields: ctx, messageID, message
func (_m *SyncOrderInterface) Handler(ctx context.Context, messageID string, message handler.MessageData) error {
	ret := _m.Called(ctx, messageID, message)

	if len(ret) == 0 {
		panic("no return value specified for Handler")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, handler.MessageData) error); ok {
		r0 = rf(ctx, messageID, message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewSyncOrderInterface creates a new instance of SyncOrderInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSyncOrderInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *SyncOrderInterface {
	mock := &SyncOrderInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
